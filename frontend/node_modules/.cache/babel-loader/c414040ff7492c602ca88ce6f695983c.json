{"ast":null,"code":"var _jsxFileName = \"E:\\\\OpenServer_5_3_8\\\\domains\\\\yprac.local\\\\mesto-react\\\\src\\\\components\\\\EditProfilePopup\\\\EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose\n  } = _ref;\n  // Подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext); // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleChangeName(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleChangeDescription(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"profile_edit\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    buttonTitle: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"el-name-input\",\n      className: \"popup__field-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"el-name-input\",\n        className: \"popup__field popup__field_el_name\",\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"40\",\n        value: name,\n        onChange: handleChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"el-name-input-error popup__field-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"el-description-input\",\n      className: \"popup__field-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"el-description-input\",\n        className: \"popup__field popup__field_el_description\",\n        placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"200\",\n        value: description,\n        onChange: handleChangeDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"el-description-input-error popup__field-error\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"DRpTYwvr/JbKs9lv5wmr17tqjyo=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/mesto-react/src/components/EditProfilePopup/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","currentUser","useContext","useEffect","setName","name","setDescription","about","useState","description","handleChangeName","evt","target","value","handleChangeDescription","handleSubmit","e","preventDefault","props","onUpdateUser"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\nfunction EditProfilePopup({\n  isOpen,\n  onClose\n}){\n// Подписка на контекст\nconst currentUser = React.useContext(CurrentUserContext);\n\n// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(() => {\n  setName(currentUser.name);\n  setDescription(currentUser.about);\n}, [currentUser]);\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleChangeName(evt){\n    setName(evt.target.value);\n  }\n\n  function handleChangeDescription(evt){\n    setDescription(evt.target.value);\n  }\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n  return (\n    <PopupWithForm\n        name=\"profile_edit\"\n        title=\"Редактировать профиль\"\n        isOpen={isOpen}\n        onClose={onClose}\n        buttonTitle=\"Сохранить\">\n        <label htmlFor=\"el-name-input\" className=\"popup__field-wrapper\">\n          <input type=\"text\"\n          name=\"name\"\n          id=\"el-name-input\"\n          className=\"popup__field popup__field_el_name\"\n          placeholder=\"Имя\"\n          required minLength=\"2\" maxLength=\"40\"\n          value={name}\n          onChange={handleChangeName}\n          />\n          <span className=\"el-name-input-error popup__field-error\"></span>\n        </label>\n        <label htmlFor=\"el-description-input\" className=\"popup__field-wrapper\">\n          <input\n          type=\"text\"\n          name=\"description\"\n          id=\"el-description-input\"\n          className=\"popup__field popup__field_el_description\"\n          placeholder=\"О себе\"\n          required minLength=\"2\" maxLength=\"200\"\n          value={description}\n          onChange={handleChangeDescription}\n          />\n          <span className=\"el-description-input-error popup__field-error\"> </span>\n        </label>\n      </PopupWithForm>\n  )\n}\nexport default EditProfilePopup;\n"]},"metadata":{},"sourceType":"module"}