{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';var checkResponse=function checkResponse(response){console.log(\"response ok -> \",response);if(response.ok){return response.json();}return response.json().then(function(res){throw res.message;});};export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{// 'Accept': 'application/json',\n\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(function(response){return response.json();/* try {\n      if (response.status === 200){\n        return response.json();\n      }\n    }catch(e){\n      return (e)\n    } */}).then(function(res){console.log(res);return res;}).catch(function(err){return console.log(err);});};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(checkResponse);};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(function(res){return res.json();});};","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/react-mesto-api-full/frontend/src/mestoAuth.js"],"names":["BASE_URL","checkResponse","response","console","log","ok","json","then","res","message","register","email","password","fetch","method","headers","body","JSON","stringify","catch","err","authorize","getContent","token"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CACP,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,CAAc,CAClCC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BF,QAA/B,EACA,GAAIA,QAAQ,CAACG,EAAb,CAAgB,CACd,MAAOH,CAAAA,QAAQ,CAACI,IAAT,EAAP,CACD,CAED,MAAOJ,CAAAA,QAAQ,CAACI,IAAT,GAAgBC,IAAhB,CAAqB,SAACC,GAAD,CAAS,CACnC,KAAMA,CAAAA,GAAG,CAACC,OAAV,CACD,CAFM,CAAP,CAGD,CATD,CAWA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3C,MAAOC,CAAAA,KAAK,WAAIb,QAAJ,YAAuB,CACjCc,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP;AACA,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACN,QAAQ,CAARA,QAAD,CAAWD,KAAK,CAALA,KAAX,CAAf,CAN2B,CAAvB,CAAL,CAQNJ,IARM,CAQD,SAACL,QAAD,CAAc,CAClB,MAAOA,CAAAA,QAAQ,CAACI,IAAT,EAAP,CACA;AACJ;AACA;AACA;AACA;AACA;AACA,QACG,CAjBM,EAkBNC,IAlBM,CAkBD,SAAAC,GAAG,CAAI,CACXL,OAAO,CAACC,GAAR,CAAYI,GAAZ,EACA,MAAOA,CAAAA,GAAP,CACD,CArBM,EAsBNW,KAtBM,CAsBA,SAACC,GAAD,QAASjB,CAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ,CAAT,EAtBA,CAAP,CAuBD,CAxBM,CAyBP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACV,KAAD,CAAQC,QAAR,CAAqB,CAC5C,MAAOC,CAAAA,KAAK,WAAIb,QAAJ,YAAuB,CACjCc,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFwB,CAKjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACN,QAAQ,CAARA,QAAD,CAAWD,KAAK,CAALA,KAAX,CAAf,CAL2B,CAAvB,CAAL,CAONJ,IAPM,CAODN,aAPC,CAAP,CAQD,CATM,CAWP,MAAO,IAAMqB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACnC,MAAOV,CAAAA,KAAK,WAAIb,QAAJ,cAAyB,CACnCc,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,iCAA4BQ,KAA5B,CAFO,CAF0B,CAAzB,CAAL,CAONhB,IAPM,CAOD,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACF,IAAJ,EAAJ,EAPF,CAAP,CAQD,CATM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\nconst checkResponse = (response) => {\n  console.log(\"response ok -> \", response);\n  if (response.ok){\n    return response.json();\n  }\n\n  return response.json().then((res) => {\n    throw res.message;\n  })\n}\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      // 'Accept': 'application/json',\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({password, email})\n  })\n  .then((response) => {\n    return response.json();\n    /* try {\n      if (response.status === 200){\n        return response.json();\n      }\n    }catch(e){\n      return (e)\n    } */\n  })\n  .then(res => {\n    console.log(res);\n    return res;\n  })\n  .catch((err) => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({password, email})\n  })\n  .then(checkResponse)\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${token}`,\n    }\n  })\n  .then(res => res.json())\n}\n"]},"metadata":{},"sourceType":"module"}