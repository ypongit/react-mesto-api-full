{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = response => {\n  console.log(\"response ok -> \", response);\n\n  if (response.ok) {\n    return response.json();\n  }\n\n  return response.json().then(res => {\n    throw res.message[0].messages[0].message;\n  });\n};\n\nexport const register = (email, password) => {\n  console.log(\"register! \");\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      // 'Accept': 'application/json',\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.user) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/react-mesto-auth/src/mestoAuth.js"],"names":["BASE_URL","checkResponse","response","console","log","ok","json","then","res","message","messages","register","email","password","fetch","method","headers","body","JSON","stringify","status","e","catch","err","authorize","data","user","localStorage","setItem","jwt"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AACP,MAAMC,aAAa,GAAIC,QAAD,IAAc;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAA/B;;AACA,MAAIA,QAAQ,CAACG,EAAb,EAAgB;AACd,WAAOH,QAAQ,CAACI,IAAT,EAAP;AACD;;AAED,SAAOJ,QAAQ,CAACI,IAAT,GAAgBC,IAAhB,CAAsBC,GAAD,IAAS;AACnC,UAAMA,GAAG,CAACC,OAAJ,CAAY,CAAZ,EAAeC,QAAf,CAAwB,CAAxB,EAA2BD,OAAjC;AACD,GAFM,CAAP;AAGD,CATD;;AAUA,OAAO,MAAME,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3CV,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,SAAOU,KAAK,CAAE,GAAEd,QAAS,SAAb,EAAuB;AACjCe,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP;AACA,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,MAAAA,QAAD;AAAWD,MAAAA;AAAX,KAAf;AAN2B,GAAvB,CAAL,CAQNL,IARM,CAQAL,QAAD,IAAc;AAClB,QAAI;AACF,UAAIA,QAAQ,CAACkB,MAAT,KAAoB,GAAxB,EAA4B;AAC1B,eAAOlB,QAAQ,CAACI,IAAT,EAAP;AACD;AACF,KAJD,CAIC,OAAMe,CAAN,EAAQ;AACP,aAAQA,CAAR;AACD;AACF,GAhBM,EAiBNd,IAjBM,CAiBAC,GAAD,IAAS;AACb,WAAOA,GAAP;AACD,GAnBM,EAoBNc,KApBM,CAoBCC,GAAD,IAASpB,OAAO,CAACC,GAAR,CAAYmB,GAAZ,CApBT,CAAP;AAqBD,CAvBM;AAwBP,OAAO,MAAMC,SAAS,GAAG,CAACZ,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEd,QAAS,SAAb,EAAuB;AACjCe,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,MAAAA,QAAD;AAAWD,MAAAA;AAAX,KAAf;AAL2B,GAAvB,CAAL,CAONL,IAPM,CAOAL,QAAQ,IAAIA,QAAQ,CAACI,IAAT,EAPZ,EAQNC,IARM,CAQAkB,IAAD,IAAU;AACd,QAAGA,IAAI,CAACC,IAAR,EAAa;AACXC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACI,GAAjC;AACA,aAAOJ,IAAP;AACD;AACF,GAbM,EAcNH,KAdM,CAcAC,GAAG,IAAIpB,OAAO,CAACC,GAAR,CAAYmB,GAAZ,CAdP,CAAP;AAeD,CAhBM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\nconst checkResponse = (response) => {\n  console.log(\"response ok -> \", response);\n  if (response.ok){\n    return response.json();\n  }\n\n  return response.json().then((res) => {\n    throw res.message[0].messages[0].message;\n  })\n}\nexport const register = (email, password) => {\n  console.log(\"register! \")\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      // 'Accept': 'application/json',\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({password, email})\n  })\n  .then((response) => {\n    try {\n      if (response.status === 200){\n        return response.json();\n      }\n    }catch(e){\n      return (e)\n    }\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({password, email})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if(data.user){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  })\n  .catch(err => console.log(err))\n};\n"]},"metadata":{},"sourceType":"module"}