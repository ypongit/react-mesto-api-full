{"ast":null,"code":"var _jsxFileName = \"E:\\\\OpenServer_5_3_8\\\\domains\\\\yprac.local\\\\mesto-react\\\\src\\\\components\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport api from '../../utils/Api';\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(_ref) {\n  _s();\n\n  let {\n    onEditProfile,\n    onAddPlace,\n    onEditAvatar,\n    onCardClick\n  } = _ref;\n  //переменные состояния отвечающие за данные пользователя\n  const [userName, setUserName] = React.useState(\"Жак-Ив Кусто\");\n  const [userDescription, setUserDescription] = React.useState(\"Исследователь океана\");\n  const [userAvatar, setUserAvatar] = React.useState(null); // переменная состояния карточек\n\n  const [cards, setCards] = React.useState([]); // запрос в API за пользовательскими данными.\n\n  React.useEffect(() => {\n    api.getProfile().then(res => {\n      const userData = res;\n      setUserName(userData.name);\n      setUserDescription(userData.about);\n      setUserAvatar(userData.avatar);\n    }).catch(err => {\n      console.log(err);\n    }, []);\n  }); // запрос к API за данными\n\n  React.useEffect(() => {\n    api.getCards().then(res => {\n      const cardsData = res.map(item => {\n        return {\n          name: item.name,\n          link: item.link,\n          id: item._id,\n          likes: item.likes\n        };\n      }); // Сохраняем карточки в стейт cards\n\n      setCards(cardsData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__data\",\n        children: [userAvatar && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__avatar\",\n          style: {\n            backgroundImage: `url(${userAvatar})`\n          },\n          onClick: onEditAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__edit\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__title\",\n              children: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"profile__edit-button\",\n              \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n              onClick: onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__text\",\n            children: userDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile__add-button\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        onCardClick: onCardClick,\n        card: card,\n        name: card.name,\n        likes: card.likes.length\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Main, \"U6YnGVzvfqouQSTPjBRFOu45qCY=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/mesto-react/src/components/Main/Main.js"],"names":["React","api","Card","Main","onEditProfile","onAddPlace","onEditAvatar","onCardClick","userName","setUserName","useState","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getProfile","then","res","userData","name","about","avatar","catch","err","console","log","getCards","cardsData","map","item","link","id","_id","likes","backgroundImage","card","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport api from '../../utils/Api'\nimport Card from '../Card/Card';\nfunction Main({\n  onEditProfile,\n  onAddPlace,\n  onEditAvatar,\n  onCardClick,\n}) {\n  //переменные состояния отвечающие за данные пользователя\n  const [userName, setUserName] = React.useState(\"Жак-Ив Кусто\");\n  const [userDescription, setUserDescription] = React.useState(\"Исследователь океана\");\n  const [userAvatar, setUserAvatar] = React.useState(null);\n  // переменная состояния карточек\n  const [cards, setCards] = React.useState([]);\n\n  // запрос в API за пользовательскими данными.\n  React.useEffect(() => {\n    api.getProfile()\n      .then(res => {\n        const userData = res;\n        setUserName(userData.name);\n        setUserDescription(userData.about);\n        setUserAvatar(userData.avatar);\n      })\n      .catch((err) => {\n        console.log(err);\n      }, []);\n  })\n  // запрос к API за данными\n  React.useEffect(() => {\n    api.getCards()\n      .then(res => {\n        const cardsData = res.map(item => {\n          return {\n            name: item.name,\n            link: item.link,\n            id: item._id,\n            likes: item.likes\n          }\n        });\n        // Сохраняем карточки в стейт cards\n        setCards(cardsData);\n      })\n  },[])\n\n  return (<main className=\"content\">\n    <section className=\"profile\">\n      <div className=\"profile__data\">\n        {userAvatar && <div className=\"profile__avatar\" style={{ backgroundImage: `url(${userAvatar})` }} onClick={onEditAvatar}></div>}\n        <div className=\"profile__info\">\n          <div className=\"profile__edit\">\n            <h1 className=\"profile__title\">{userName}</h1>\n            <button type=\"button\" className=\"profile__edit-button\" aria-label=\"Редактировать\" onClick={onEditProfile}></button>\n          </div>\n          <p className=\"profile__text\">{userDescription}</p>\n        </div>\n      </div>\n      <button type=\"button\" className=\"profile__add-button\" onClick={onAddPlace}></button>\n    </section>\n\n    <section className=\"elements\">\n      {cards.map(card => (\n\n        <Card\n          key={card.id}\n          onCardClick={onCardClick}\n          card={card}\n          name={card.name}\n          likes={card.likes.length}\n        />\n      ))}\n    </section>\n\n  </main>)\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}