{"ast":null,"code":"var _jsxFileName = \"E:\\\\OpenServer_5_3_8\\\\domains\\\\yprac.local\\\\mesto-react\\\\src\\\\components\\\\EditAvatarPopup\\\\EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onUpdateAvatar\n  } = _ref;\n  const inputRef = React.useRef(); // записываем объект, возвращаемый хуком, в переменную\n  // inputRef.current.value = '';\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: inputRef.current.value\n      /* Значение инпута, полученное с помощью рефа */\n\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    name: \"avatar_update\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    buttonTitle: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"image-link-input\",\n      className: \"popup__field-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"url\",\n        name: \"link\",\n        id: \"avatar-link-input\",\n        className: \"popup__field popup__field_card_link\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__field-error avatar-link-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/mesto-react/src/components/EditAvatarPopup/EditAvatarPopup.js"],"names":["React","PopupWithForm","EditAvatarPopup","isOpen","onClose","onUpdateAvatar","inputRef","useRef","handleSubmit","e","preventDefault","avatar","current","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,SAASC,eAAT,OAIG;AAAA;;AAAA,MAJsB;AACvBC,IAAAA,MADuB;AAEvBC,IAAAA,OAFuB;AAGvBC,IAAAA;AAHuB,GAItB;AACD,QAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAN,EAAjB,CADC,CACgC;AAC/B;;AAEF,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,cAAc,CAAC;AACbM,MAAAA,MAAM,EAAEL,QAAQ,CAACM,OAAT,CAAiBC;AAAO;;AADnB,KAAD,CAAd;AAID;;AAED,sBACE,QAAC,aAAD;AACE,IAAA,MAAM,EAAEV,MADV;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,QAAQ,EAAEI,YAHZ;AAIE,IAAA,IAAI,EAAC,eAJP;AAKE,IAAA,KAAK,EAAC,uFALR;AAME,IAAA,WAAW,EAAC,wDANd;AAAA,2BAOE;AAAO,MAAA,OAAO,EAAC,kBAAf;AAAkC,MAAA,SAAS,EAAC,sBAA5C;AAAA,8BACE;AACE,QAAA,GAAG,EAAEF,QADP;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,EAAE,EAAC,mBAJL;AAKE,QAAA,SAAS,EAAC,qCALZ;AAME,QAAA,WAAW,EAAC,2EANd;AAOE,QAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAtCQJ,e;;KAAAA,e;AAwCT,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\n\nfunction EditAvatarPopup({\n  isOpen,\n  onClose,\n  onUpdateAvatar\n}) {\n  const inputRef = React.useRef(); // записываем объект, возвращаемый хуком, в переменную\n    // inputRef.current.value = '';\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: inputRef.current.value, /* Значение инпута, полученное с помощью рефа */\n    }\n    );\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name=\"avatar_update\"\n      title=\"Обновить аватар\"\n      buttonTitle=\"Сохранить\">\n      <label htmlFor=\"image-link-input\" className=\"popup__field-wrapper\">\n        <input\n          ref={inputRef}\n          type=\"url\"\n          name=\"link\"\n          id=\"avatar-link-input\"\n          className=\"popup__field popup__field_card_link\"\n          placeholder=\"Ссылка аватар\"\n          required\n        />\n        <span className=\"popup__field-error avatar-link-input-error\"></span>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n"]},"metadata":{},"sourceType":"module"}