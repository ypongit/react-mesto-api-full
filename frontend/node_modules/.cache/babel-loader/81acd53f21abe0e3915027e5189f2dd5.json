{"ast":null,"code":"var _jsxFileName = \"E:\\\\OpenServer_5_3_8\\\\domains\\\\yprac.local\\\\react-mesto-auth\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, withRouter } from 'react-router-dom';\nimport * as mestoAuth from '../../mestoAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!inputs.email || !inputs.password) {\n      return;\n    }\n    /* props.handleLogin(inputs.email, inputs.password)\n      .catch(setMessage); */\n\n\n    mestoAuth.authorize(inputs.email, inputs.password).then(data => {\n      // нужно проверить, есть ли у данных jwt\n      if (data.jwt) {\n        // сбросьте стейт, затем в колбэке установите\n        setInputs({\n          email: '',\n          password: ''\n        }), () => {\n          // стейт loggedIn родительского App как true,\n          props.handleLogin(); // затем перенаправьте его в /\n\n          props.history.push('/');\n        };\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"register__title\",\n      children: \"\\u0412\\u0445\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"register__input\",\n        name: \"email\",\n        id: \"email\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"20\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"register__input\",\n        name: \"password\",\n        id: \"password\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"20\",\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"register__submit\",\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"yhgPqrxCQYcy1hv6y6xa41Kbq4Q=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/react-mesto-auth/src/components/Login/Login.js"],"names":["React","useState","Link","withRouter","mestoAuth","Login","props","inputs","setInputs","email","password","message","setMessage","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","authorize","then","data","jwt","handleLogin","history","push","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AACA,OAAO,KAAKC,SAAZ,MAA2B,iBAA3B;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACnCQ,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,QAAQ,EAAE;AAFyB,GAAD,CAApC;AAIA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAT,IAAAA,SAAS,CAAEU,IAAD,KAAW,EACnB,GAAGA,IADgB;AAEnB,OAACH,IAAD,GAAQC;AAFW,KAAX,CAAD,CAAT;AAID,GAND;;AAOA,QAAMG,YAAY,GAAIL,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACM,cAAF;;AACA,QAAI,CAACb,MAAM,CAACE,KAAR,IAAiB,CAACF,MAAM,CAACG,QAA7B,EAAsC;AACpC;AACD;AACD;AACF;;;AACIN,IAAAA,SAAS,CAACiB,SAAV,CAAoBd,MAAM,CAACE,KAA3B,EAAkCF,MAAM,CAACG,QAAzC,EACCY,IADD,CACOC,IAAD,IAAU;AACd;AACA,UAAGA,IAAI,CAACC,GAAR,EAAY;AACX;AACDhB,QAAAA,SAAS,CAAC;AACVC,UAAAA,KAAK,EAAE,EADG;AAEVC,UAAAA,QAAQ,EAAE;AAFA,SAAD,CAAT,EAGE,MAAM;AACP;AACDJ,UAAAA,KAAK,CAACmB,WAAN,GAFQ,CAGR;;AACAnB,UAAAA,KAAK,CAACoB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,SARC;AAQA;AACH,KAdC,EAeDC,KAfC,CAeKC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAfZ;AAgBH,GAvBD;;AAwBA,sBACE;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA,4BACA;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,EAAE,EAAC,OAJL;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,SAAS,EAAC,GANZ;AAOE,QAAA,SAAS,EAAC,IAPZ;AAQE,QAAA,WAAW,EAAC;AARd;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,EAAE,EAAC,UAJL;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,SAAS,EAAC,GANZ;AAOE,QAAA,SAAS,EAAC,IAPZ;AAQE,QAAA,WAAW,EAAC;AARd;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BC,CArED;;GAAMxB,K;;KAAAA,K;AAuEN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {Link, withRouter} from 'react-router-dom';\nimport * as mestoAuth from '../../mestoAuth';\n\nconst Login = (props) => {\nconst [inputs, setInputs] = useState({\n  email: '',\n  password: '',\n});\nconst [message, setMessage] = useState('');\n\nconst handleChange = (e) => {\n  const {name, value} = e.target;\n  setInputs((prev) => ({\n    ...prev,\n    [name]: value,\n  }));\n}\nconst handleSubmit = (e) => {\n  e.preventDefault();\n  if (!inputs.email || !inputs.password){\n    return;\n  }\n  /* props.handleLogin(inputs.email, inputs.password)\n    .catch(setMessage); */\n    mestoAuth.authorize(inputs.email, inputs.password)\n    .then((data) => {\n      // нужно проверить, есть ли у данных jwt\n      if(data.jwt){\n       // сбросьте стейт, затем в колбэке установите\n      setInputs({\n      email: '',\n      password: ''\n    }), () => {\n       // стейт loggedIn родительского App как true,\n      props.handleLogin();\n      // затем перенаправьте его в /\n      props.history.push('/');\n    }}\n  })\n  .catch(err => console.log(err))\n}\nreturn (\n  <section className=\"register\">\n  <h2 className=\"register__title\">Вход</h2>\n  <form className=\"register__form\">\n    <input\n      type=\"email\"\n      className=\"register__input\"\n      name=\"email\"\n      id=\"email\"\n      required\n      minLength=\"2\"\n      maxLength=\"20\"\n      placeholder=\"Email\"\n    />\n    <input\n      type=\"password\"\n      className=\"register__input\"\n      name=\"password\"\n      id=\"password\"\n      required\n      minLength=\"2\"\n      maxLength=\"20\"\n      placeholder=\"Пароль\"\n    />\n    <button\n      className=\"register__submit\"\n      type=\"submit\"\n    >Войти</button>\n  </form>\n</section>\n)\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}