{"ast":null,"code":"import _toConsumableArray from\"E:/OpenServer_5_3_8/domains/yprac.local/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"E:/OpenServer_5_3_8/domains/yprac.local/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{Route,Switch,Redirect,useHistory}from\"react-router-dom\";import Header from'../Header';import Login from'../Login/Login';import Register from'../Register/Register';import*as mestoAuth from'../../mestoAuth';import ProtectedRoute from'../ProtectedRoute/ProtectedRoute';import Main from'../Main/Main';import Footer from'../Footer/Footer';import PopupWithForm from'../PopupWithForm/PopupWithForm';import ImagePopup from'../ImagePopup/ImagePopup';import api from\"../../utils/Api\";import EditProfilePopup from\"../EditProfilePopup/EditProfilePopup\";import EditAvatarPopup from\"../EditAvatarPopup/EditAvatarPopup\";import AddPlacePopup from'../AddPlacePopup/AddPlacePopup';import InfoTooltip from'../InfoTooltip/InfoTooltip';import regSuccess from'../../images/regSuccess.svg';import regFail from'../../images/regFail.svg';// Импортируем объект контекста\nimport{CurrentUserContext}from'../../contexts/CurrentUserContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// переменная содержит статус пользователя — вошёл он в систему или нет\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),loggedIn=_useState2[0],setLoggedIn=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var history=useHistory();// переменные состояния, отвечающие за видимость попапов:\nvar _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isEditProfilePopupOpen=_React$useState2[0],setIsEditProfilePopupOpen=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isAddPlacePopupOpen=_React$useState4[0],setIsAddPlacePopupOpen=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),isEditAvatarPopupOpen=_React$useState6[0],setIsEditAvatarPopupOpen=_React$useState6[1];var _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),isInfoTooltipOpen=_React$useState8[0],setIsInfoTooltipOpen=_React$useState8[1];/* Значение переменной задаётся из обработчика handleCardClick\n   и сбрасывается из обработчика closeAllPopups. */var _React$useState9=React.useState(null),_React$useState10=_slicedToArray(_React$useState9,2),selectedCard=_React$useState10[0],setSelectedCard=_React$useState10[1];// Контекст текущего пользователя\nvar _React$useState11=React.useState({}),_React$useState12=_slicedToArray(_React$useState11,2),currentUser=_React$useState12[0],setCurrentUser=_React$useState12[1];var _React$useState13=React.useState([]),_React$useState14=_slicedToArray(_React$useState13,2),cards=_React$useState14[0],setCards=_React$useState14[1];useEffect(function(){checkToken();},[]);useEffect(function(){if(loggedIn){history.push(\"/\");return;}history.push(\"/signup\");},[loggedIn]);// запрос к API за данными карточек\nReact.useEffect(function(){api.getCards().then(function(res){var cardsData=res.map(function(item){return{name:item.name,link:item.link,_id:item._id,likes:item.likes,owner:item.owner};});// Сохраняем карточки в стейт cards\nsetCards(cardsData);}).catch(function(err){console.log(err);});},[]);// добавление карточки\nfunction handleAddPlaceSubmit(_ref){var name=_ref.name,link=_ref.link;api.addCard({name:name,link:link}).then(function(newCard){setCards([newCard].concat(_toConsumableArray(cards)));closeAllPopups();}).catch(function(err){console.log(err);});}// установка- снятие лайка\nfunction handleCardLike(card){// Снова проверяем, есть ли уже лайк на этой карточке\nvar isLiked=card.likes.some(function(i){return i._id===currentUser._id;});api.changeLikeCardStatus(card._id,isLiked).then(function(newCard){setCards(function(state){return state.map(function(c){return c._id===card._id?newCard:c;});});}).catch(function(err){console.log(err);});}// удаление карточки\nfunction handleCardDelete(card){var isOwn=card.owner._id===currentUser._id;if(isOwn){api.deleteCard(card._id).then(function(){setCards(function(state){return state.filter(function(c){return c._id!==card._id;});});}).catch(function(err){console.log(err);});}}// запрос к API за данными пользователя\nReact.useEffect(function(){api.getProfile().then(function(currentUserData){setCurrentUser(currentUserData);}).catch(function(err){console.log(err);});},[]);// обработчик редактирования профиля\nfunction handleUpdateUser(_ref2){var name=_ref2.name,about=_ref2.about;api.setUserInfo({name:name,about:about}).then(function(currentUserData){setCurrentUser(currentUserData);closeAllPopups();}).catch(function(err){console.log(err);});}function handleUpdateAvatar(avatar){api.setAvatar(avatar).then(function(currentUserData){setCurrentUser(currentUserData);closeAllPopups();}).catch(function(err){console.log(err);});}function handleEditAvatarClick(){setIsEditAvatarPopupOpen(true);}function handleEditProfileClick(){setIsEditProfilePopupOpen(true);}function handleAddPlaceClick(){setIsAddPlacePopupOpen(true);}function handleInfoTooltipClick(){setIsInfoTooltipOpen(true);}var _useState5=useState({title:\"Что-то пошло не так! Попробуйте ещё раз.\",icon:regFail}),_useState6=_slicedToArray(_useState5,2),InfoTooltipTitle=_useState6[0],setInfoTooltipTitle=_useState6[1];// обработчик пропса onClose компонента PopupWithForm\nfunction closeAllPopups(){setIsEditProfilePopupOpen(false);setIsAddPlacePopupOpen(false);setIsEditAvatarPopupOpen(false);setIsInfoTooltipOpen(false);setSelectedCard(null);}function handleCardClick(card){setSelectedCard(card);}// Обработчик формы регистрации\nvar handleRegister=function handleRegister(email,password){return mestoAuth.register(email,password).then(function(res){handleInfoTooltipClick();if(res.data){setInfoTooltipTitle({icon:regSuccess,title:\"Вы успешно зарегистрировались!\"});}else{setInfoTooltipTitle({icon:regFail,title:\"Что-то пошло не так! Попробуйте ещё раз.\"});}history.push('/signin');}).catch(function(err){console.log(err);handleInfoTooltipClick();});};// Обработчик формы авторизации\nvar handleLogin=function handleLogin(email,password){// console.log('handleLogin -> ');\nreturn mestoAuth.authorize(email,password).then(function(data){// console.log('data -> ', data)\n// нужно проверить, есть ли у данных jwt\nif(!data.token){return;}localStorage.setItem('jwt',data.token);// сбросьте стейт, затем в колбэке установите\nsetEmail(email);setLoggedIn(true);});};var checkToken=function checkToken(){// если у пользователя есть токен в localStorage,\n// эта функция проверит, действующий он или нет\nif(localStorage.getItem('jwt')){var jwt=localStorage.getItem('jwt');mestoAuth.getContent(jwt).then(function(res){if(res){setEmail(res.data.email);setLoggedIn(true);}});}};var handleSignOut=function handleSignOut(){localStorage.removeItem('jwt');setLoggedIn(false);};return/*#__PURE__*/ (// «Внедряем» данные из currentUser с помощью провайдера контекста\n_jsx(CurrentUserContext.Provider,{value:currentUser,children:/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(Header,{email:email,onSignOut:handleSignOut,loggedIn:loggedIn}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/signin\",children:/*#__PURE__*/_jsx(Login,{handleLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",children:/*#__PURE__*/_jsx(Register,{handleRegister:handleRegister})}),/*#__PURE__*/_jsx(ProtectedRoute,{path:\"/\",loggedIn:loggedIn,children:/*#__PURE__*/_jsx(Main// Прокидываем пропсы в компонент Main\n,{cards:cards,onEditProfile:handleEditProfileClick,onAddPlace:handleAddPlaceClick,onEditAvatar:handleEditAvatarClick,onCardClick:handleCardClick,onCardLike:handleCardLike,onCardDelete:handleCardDelete})}),/*#__PURE__*/_jsx(Route,{children:loggedIn?/*#__PURE__*/_jsx(Redirect,{to:\"/\"}):/*#__PURE__*/_jsx(Redirect,{to:\"/signin/\"})})]}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(EditProfilePopup,{isOpen:isEditProfilePopupOpen,onClose:closeAllPopups,onUpdateUser:handleUpdateUser}),/*#__PURE__*/_jsx(AddPlacePopup,{isOpen:isAddPlacePopupOpen,onClose:closeAllPopups,onAddPlace:handleAddPlaceSubmit}),/*#__PURE__*/_jsx(PopupWithForm,{name:\"card_delete\",title:\"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",buttonTitle:\"\\u0414\\u0430\"}),/*#__PURE__*/_jsx(EditAvatarPopup,{isOpen:isEditAvatarPopupOpen,onClose:closeAllPopups,onUpdateAvatar:handleUpdateAvatar}),/*#__PURE__*/_jsx(ImagePopup,{card:selectedCard,onClose:closeAllPopups}),/*#__PURE__*/_jsx(InfoTooltip,{isOpen:isInfoTooltipOpen,onClose:closeAllPopups,title:InfoTooltipTitle.title,icon:InfoTooltipTitle.icon,name:\"infotool\"})]})}));}export default App;","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/react-mesto-api-full/frontend/src/components/App/App.js"],"names":["React","useEffect","useState","Route","Switch","Redirect","useHistory","Header","Login","Register","mestoAuth","ProtectedRoute","Main","Footer","PopupWithForm","ImagePopup","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","InfoTooltip","regSuccess","regFail","CurrentUserContext","App","loggedIn","setLoggedIn","email","setEmail","history","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","checkToken","push","getCards","then","res","cardsData","map","item","name","link","_id","likes","owner","catch","err","console","log","handleAddPlaceSubmit","addCard","newCard","closeAllPopups","handleCardLike","card","isLiked","some","i","changeLikeCardStatus","state","c","handleCardDelete","isOwn","deleteCard","filter","getProfile","currentUserData","handleUpdateUser","about","setUserInfo","handleUpdateAvatar","avatar","setAvatar","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleInfoTooltipClick","title","icon","InfoTooltipTitle","setInfoTooltipTitle","handleCardClick","handleRegister","password","register","data","handleLogin","authorize","token","localStorage","setItem","getItem","jwt","getContent","handleSignOut","removeItem"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport Header from '../Header';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport * as mestoAuth from '../../mestoAuth'\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\nimport ImagePopup from '../ImagePopup/ImagePopup';\nimport api from \"../../utils/Api\";\nimport EditProfilePopup from \"../EditProfilePopup/EditProfilePopup\";\nimport EditAvatarPopup from \"../EditAvatarPopup/EditAvatarPopup\";\nimport AddPlacePopup from '../AddPlacePopup/AddPlacePopup';\nimport InfoTooltip from '../InfoTooltip/InfoTooltip';\nimport regSuccess from '../../images/regSuccess.svg';\nimport regFail from '../../images/regFail.svg';\n// Импортируем объект контекста\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\n\nfunction App() {\n  // переменная содержит статус пользователя — вошёл он в систему или нет\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState(null);\n\n  const history = useHistory();\n\n  // переменные состояния, отвечающие за видимость попапов:\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n\n  /* Значение переменной задаётся из обработчика handleCardClick\n   и сбрасывается из обработчика closeAllPopups. */\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  // Контекст текущего пользователя\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  useEffect(() => {\n    checkToken();\n  }, []);\n\n  useEffect(() => {\n    if (loggedIn) {\n      history.push(\"/\");\n      return;\n    }\n    history.push(\"/signup\")\n  }, [loggedIn]);\n\n  // запрос к API за данными карточек\n  React.useEffect(() => {\n    api.getCards()\n      .then(res => {\n        const cardsData = res.map(item => {\n          return {\n            name: item.name,\n            link: item.link,\n            _id: item._id,\n            likes: item.likes,\n            owner: item.owner\n          }\n        });\n        // Сохраняем карточки в стейт cards\n        setCards(cardsData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [])\n\n  // добавление карточки\n  function handleAddPlaceSubmit({ name, link }) {\n    api.addCard({ name, link })\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  // установка- снятие лайка\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  // удаление карточки\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id;\n    if (isOwn) {\n      api.deleteCard(card._id)\n        .then(() => {\n          setCards((state) => state.filter((c) => c._id !== card._id));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }\n  // запрос к API за данными пользователя\n  React.useEffect(() => {\n    api.getProfile()\n      .then(currentUserData => {\n        setCurrentUser(currentUserData);\n      })\n      .catch((err) => { console.log(err); });\n  }, []);\n\n  // обработчик редактирования профиля\n  function handleUpdateUser({ name, about }) {\n    api.setUserInfo({ name, about })\n      .then(currentUserData => {\n        setCurrentUser(currentUserData);\n        closeAllPopups();\n      })\n      .catch((err) => { console.log(err); });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.setAvatar(avatar)\n      .then(currentUserData => {\n        setCurrentUser(currentUserData);\n        closeAllPopups();\n      })\n      .catch((err) => { console.log(err); });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleInfoTooltipClick() {\n    setIsInfoTooltipOpen(true);\n  }\n\n  const[InfoTooltipTitle, setInfoTooltipTitle] = useState({\n    title: \"Что-то пошло не так! Попробуйте ещё раз.\",\n    icon: regFail,\n  });\n\n  // обработчик пропса onClose компонента PopupWithForm\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsInfoTooltipOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  // Обработчик формы регистрации\n  const handleRegister = (email, password) => {\n    return mestoAuth.register(email, password)\n    .then((res) => {\n      handleInfoTooltipClick();\n\n      if(res.data){\n        setInfoTooltipTitle({\n          icon: regSuccess,\n          title: \"Вы успешно зарегистрировались!\"\n        })\n      } else {\n        setInfoTooltipTitle({\n          icon: regFail,\n          title: \"Что-то пошло не так! Попробуйте ещё раз.\"\n        })\n      }\n\n      history.push('/signin')\n    })\n    .catch((err) => {\n      console.log(err);\n      handleInfoTooltipClick();\n    })\n  }\n  // Обработчик формы авторизации\n  const handleLogin = (email, password) => {\n    // console.log('handleLogin -> ');\n    return mestoAuth.authorize(email, password)\n     .then((data) => {\n      // console.log('data -> ', data)\n       // нужно проверить, есть ли у данных jwt\n       if(!data.token){\n         return;\n      }\n         localStorage.setItem('jwt', data.token);\n        // сбросьте стейт, затем в колбэке установите\n      setEmail(email);\n      setLoggedIn(true);\n  });\n  }\n\n  const checkToken = () => {\n  // если у пользователя есть токен в localStorage,\n  // эта функция проверит, действующий он или нет\n    if (localStorage.getItem('jwt')){\n      const jwt = localStorage.getItem('jwt');\n       mestoAuth.getContent(jwt).then((res) => {\n         if (res){\n           setEmail(res.data.email);\n           setLoggedIn(true);\n         }\n       })\n    }\n  }\n\n  const handleSignOut = () => {\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n  }\n\n  return (\n    // «Внедряем» данные из currentUser с помощью провайдера контекста\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header\n          email = {email}\n          onSignOut={handleSignOut}\n          loggedIn={loggedIn}\n        />\n\n        <Switch>\n          <Route path=\"/signin\">\n            <Login handleLogin={handleLogin} />\n          </Route>\n          <Route path=\"/signup\">\n            <Register handleRegister={handleRegister}/>\n          </Route>\n          <ProtectedRoute\n            path=\"/\"\n            loggedIn={loggedIn}\n          >\n            <Main\n            // Прокидываем пропсы в компонент Main\n              cards={cards}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n            />\n          </ProtectedRoute>\n\n          <Route>\n            {loggedIn ? <Redirect to='/' /> : <Redirect to='/signin/' />}\n          </Route>\n        </Switch>\n\n        <Footer />\n\n        {/* Форма редактирования профиля («Редактировать профиль») */}\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        {/* Форма добавления карточки («Новое место»)*/}\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        {/* Форма удаления карточки («Вы уверены?»)*/}\n        <PopupWithForm\n          name=\"card_delete\"\n          title=\"Вы уверены?\"\n          buttonTitle=\"Да\"\n        />\n\n        {/* Форма обновления аватара («Обновить аватар»)*/}\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        {/* Значение selectedCard должно передаваться с помощью пропса card в компонент ImagePopup */}\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n        {/* информирует пользователя об успешной (или не очень) регистрации. */}\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          title={InfoTooltipTitle.title}\n          icon={InfoTooltipTitle.icon}\n          name=\"infotool\"\n        />\n\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}