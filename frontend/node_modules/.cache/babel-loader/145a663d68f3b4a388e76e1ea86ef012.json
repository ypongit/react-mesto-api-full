{"ast":null,"code":"import _classCallCheck from\"E:/OpenServer_5_3_8/domains/yprac.local/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"E:/OpenServer_5_3_8/domains/yprac.local/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._headers=headers;this._baseUrl=baseUrl;// тело конструктора\n}// загрузка данных профиля\n_createClass(Api,[{key:\"getProfile\",value:function getProfile(){return fetch(\"\".concat(this._baseUrl,\"/users/me \"),{headers:this._headers}).then(function(res){return res.ok?res.json():Promise.reject(res.status);});}// загрузка карточек\n},{key:\"getCards\",value:function getCards(){// ...\nreturn fetch(\"\".concat(this._baseUrl,\"/cards \"),{headers:this._headers}).then(function(res){return res.ok?res.json():Promise.reject(res.status);});}// изменение данных профиля на сервере\n},{key:\"setUserInfo\",value:function setUserInfo(_ref2){var name=_ref2.name,about=_ref2.about;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:name,about:about})}).then(function(res){return res.ok?res.json():Promise.reject(res.status);});}},{key:\"editProfile\",value:function editProfile(name,about){// ...\nreturn fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:name,about:about})}).then(function(res){return res.ok?res.json():Promise.reject(res.status);});}// Добавление новой карточки\n},{key:\"addCard\",value:function addCard(_ref3){var name=_ref3.name,link=_ref3.link;// ...\nreturn fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(function(res){return res.ok?res.json():Promise.reject(res.status);});}// удаление новой карточки\n},{key:\"deleteCard\",value:function deleteCard(id){// ...\nreturn fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\" \"),{method:\"DELETE\",headers:this._headers}).then(function(res){return res.ok?res.json():Promise.reject(res.status);});}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(id,isLiked){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\"/likes \"),{method:isLiked?\"DELETE\":\"PUT\",headers:this._headers}).then(function(res){return res.ok?res.json():Promise.reject(res.status);});}// удаление лайка\n},{key:\"deleteLike\",value:function deleteLike(id){// ...\nreturn fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\"/likes \"),{method:\"DELETE\",headers:this._headers}).then(function(res){return res.ok?res.json():Promise.reject(res.status);});}// добавление лайка\n},{key:\"addLike\",value:function addLike(id){// ...\nreturn fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\"/likes \"),{method:\"PUT\",headers:this._headers}).then(function(res){return res.ok?res.json():Promise.reject(res.status);});}// установка аватара\n},{key:\"setAvatar\",value:function setAvatar(_ref4){var avatar=_ref4.avatar;// ...\nreturn fetch(\"\".concat(this._baseUrl,\"/users/me/avatar \"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:avatar})}).then(function(res){return res.ok?res.json():Promise.reject(res.status);});}// другие методы работы с API\n}]);return Api;}();// внутри api.js создайте экземпляр класса Api с нужными параметрами (включая ваш токен)\nvar api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-37',// authorization: '3e042cce-8939-40c2-9f95-48414868d982',\nheaders:{authorization:'3e042cce-8939-40c2-9f95-48414868d982','Content-Type':'application/json'}});// и экспортируйте этот экземпляр вместо самого класса\nexport default api;","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/react-mesto-api-full/frontend/src/utils/Api.js"],"names":["Api","baseUrl","headers","_headers","_baseUrl","fetch","then","res","ok","json","Promise","reject","status","name","about","method","body","JSON","stringify","link","id","isLiked","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._headers = headers;\r\n    this._baseUrl = baseUrl;\r\n    // тело конструктора\r\n  }\r\n// загрузка данных профиля\r\n  getProfile(){\r\n    return fetch(`${this._baseUrl}/users/me `, {\r\n      headers: this._headers\r\n    })\r\n    .then(res => res.ok ? res.json() : Promise.reject(res.status))\r\n\r\n  }\r\n// загрузка карточек\r\n  getCards() {\r\n    // ...\r\n    return fetch(`${this._baseUrl}/cards `, {\r\n      headers: this._headers\r\n    })\r\n    .then(res => res.ok ? res.json() : Promise.reject(res.status))\r\n  }\r\n  // изменение данных профиля на сервере\r\n  setUserInfo({name, about}){\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        about\r\n      })\r\n    })\r\n    .then(res => res.ok ? res.json() : Promise.reject(res.status))\r\n  }\r\n\r\n  editProfile(name, about) {\r\n    // ...\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        about\r\n      })\r\n    })\r\n    .then(res => res.ok ? res.json() : Promise.reject(res.status))\r\n  }\r\n// Добавление новой карточки\r\naddCard({name, link}) {\r\n  // ...\r\n  return fetch(`${this._baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: this._headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      link\r\n    })\r\n  })\r\n  .then(res => res.ok ? res.json() : Promise.reject(res.status))\r\n}\r\n// удаление новой карточки\r\ndeleteCard(id) {\r\n  // ...\r\n  return fetch(`${this._baseUrl}/cards/${id} `, {\r\n    method: \"DELETE\",\r\n    headers: this._headers\r\n  })\r\n  .then(res => res.ok ? res.json() : Promise.reject(res.status))\r\n}\r\nchangeLikeCardStatus(id, isLiked){\r\n  return fetch(`${this._baseUrl}/cards/${id}/likes `, {\r\n    method:  isLiked ? \"DELETE\" :  \"PUT\",\r\n    headers: this._headers\r\n  })\r\n  .then(res => res.ok ? res.json() : Promise.reject(res.status))\r\n}\r\n// удаление лайка\r\ndeleteLike(id) {\r\n  // ...\r\n  return fetch(`${this._baseUrl}/cards/${id}/likes `, {\r\n    method: \"DELETE\",\r\n    headers: this._headers\r\n  })\r\n  .then(res => res.ok ? res.json() : Promise.reject(res.status))\r\n}\r\n// добавление лайка\r\naddLike(id) {\r\n  // ...\r\n  return fetch(`${this._baseUrl}/cards/${id}/likes `, {\r\n    method: \"PUT\",\r\n    headers: this._headers\r\n  })\r\n  .then(res => res.ok ? res.json() : Promise.reject(res.status))\r\n}\r\n// установка аватара\r\nsetAvatar({avatar}) {\r\n  // ...\r\n\r\n  return fetch(`${this._baseUrl}/users/me/avatar `, {\r\n    method: \"PATCH\",\r\n    headers: this._headers,\r\n    body: JSON.stringify({\r\n      avatar\r\n    })\r\n  })\r\n  .then(res => res.ok ? res.json() : Promise.reject(res.status))\r\n}\r\n  // другие методы работы с API\r\n}\r\n// внутри api.js создайте экземпляр класса Api с нужными параметрами (включая ваш токен)\r\n\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-37',\r\n  // authorization: '3e042cce-8939-40c2-9f95-48414868d982',\r\n  headers: {\r\n    authorization: '3e042cce-8939-40c2-9f95-48414868d982',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n// и экспортируйте этот экземпляр вместо самого класса\r\nexport default api;\r\n"]},"metadata":{},"sourceType":"module"}