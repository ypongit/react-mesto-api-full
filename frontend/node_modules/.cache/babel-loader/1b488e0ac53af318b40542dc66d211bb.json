{"ast":null,"code":"var _jsxFileName = \"E:\\\\OpenServer_5_3_8\\\\domains\\\\yprac.local\\\\react-mesto-auth\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, withRouter } from 'react-router-dom';\nimport * as mestoAuth from '../../mestoAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(e);\n\n    if (!inputs.email || !inputs.password) {\n      return;\n    }\n\n    console.log('email -> ', inputs.email);\n    console.log('password -> ', inputs.password);\n    /* props.handleLogin(inputs.email, inputs.password)\n      .catch(setMessage); */\n\n    mestoAuth.authorize(inputs.email, inputs.password).then(data => {\n      // нужно проверить, есть ли у данных jwt\n      if (data.jwt) {\n        // сбросьте стейт, затем в колбэке установите\n        setInputs({\n          email: '',\n          password: ''\n        }).then(res => console.log('data.jwt', res));\n        /* () => {\n           // стейт loggedIn родительского App как true,\n          props.handleLogin();\n          // затем перенаправьте его в /\n          props.history.push('/');\n        } */\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"register__title\",\n      children: \"\\u0412\\u0445\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register__form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"register__input\",\n        name: \"email\",\n        id: \"email\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"20\",\n        placeholder: \"Email\",\n        value: inputs.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"register__input\",\n        name: \"password\",\n        id: \"password\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"20\",\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        value: inputs.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"register__submit\",\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"D5uLRj3+URkZ0UZfKQH1lsscoL0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/react-mesto-auth/src/components/Login/Login.js"],"names":["React","useState","Link","withRouter","mestoAuth","Login","props","inputs","setInputs","email","password","message","setMessage","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","console","log","authorize","then","data","jwt","res","catch","err"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, withRouter } from 'react-router-dom';\nimport * as mestoAuth from '../../mestoAuth';\n\nconst Login = (props) => {\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: '',\n  });\n  const [message, setMessage] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setInputs((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(e);\n    if (!inputs.email || !inputs.password) {\n      return;\n    }\n\n    console.log('email -> ', inputs.email)\n    console.log('password -> ', inputs.password)\n    /* props.handleLogin(inputs.email, inputs.password)\n      .catch(setMessage); */\n     mestoAuth.authorize(inputs.email, inputs.password)\n     .then((data) => {\n       // нужно проверить, есть ли у данных jwt\n       if(data.jwt){\n        // сбросьте стейт, затем в колбэке установите\n       setInputs({\n       email: '',\n       password: ''\n     })\n     .then(res => console.log('data.jwt', res))\n\n     /* () => {\n        // стейт loggedIn родительского App как true,\n       props.handleLogin();\n       // затем перенаправьте его в /\n       props.history.push('/');\n     } */\n    }\n   })\n   .catch(err => console.log(err))\n  }\n  return (\n    <section className=\"register\">\n      <h2 className=\"register__title\">Вход</h2>\n      <form\n        className=\"register__form\"\n        onSubmit={handleSubmit}\n        >\n        <input\n          type=\"email\"\n          className=\"register__input\"\n          name=\"email\"\n          id=\"email\"\n          required\n          minLength=\"2\"\n          maxLength=\"20\"\n          placeholder=\"Email\"\n          value={inputs.email}\n          onChange={handleChange}\n        />\n        <input\n          type=\"password\"\n          className=\"register__input\"\n          name=\"password\"\n          id=\"password\"\n          required\n          minLength=\"2\"\n          maxLength=\"20\"\n          placeholder=\"Пароль\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <button\n          className=\"register__submit\"\n          type=\"submit\"\n        >Войти</button>\n      </form>\n    </section>\n  )\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}