{"ast":null,"code":"var _jsxFileName = \"E:\\\\OpenServer_5_3_8\\\\domains\\\\yprac.local\\\\mesto-react\\\\src\\\\components\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport api from '../../utils/Api';\nimport Card from '../Card/Card';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(_ref) {\n  _s();\n\n  let {\n    onEditProfile,\n    onAddPlace,\n    onEditAvatar,\n    onCardClick,\n    cards\n  } = _ref;\n  //переменные состояния отвечающие за данные пользователя\n  const currentUser = React.useContext(CurrentUserContext); // const [userName, setUserName] = React.useState(\"Жак-Ив Кусто\");\n  // const [userDescription, setUserDescription] = React.useState(\"Исследователь океана\");\n  // const [userAvatar, setUserAvatar] = React.useState(null);\n  // переменная состояния карточек\n  // const [cards, setCards] = React.useState([]);\n\n  console.log('cards -> ', cards);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    /*     console.log(\"handleCardLike isLiked\", isLiked )\n        console.log(\"card ->\", card ) */\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    /*    */\n\n    /* if (!isLiked){\n      api.addLike(card._id)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c)));\n    }).catch((err) => {\n      console.log(err);\n    });\n    } else {\n      api.deleteLike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) =>( c._id === card._id ? newCard : c)));\n      }).catch((err) => {\n        console.log(err);\n      });\n    } */\n  } // запрос в API за пользовательскими данными.\n\n  /*   React.useEffect(() => {\n      api.getProfile()\n        .then(res => {\n          const userData = res;\n          setUserName(userData.name);\n          setUserDescription(userData.about);\n          setUserAvatar(userData.avatar);\n        })\n        .catch((err) => {\n          console.log(err);\n        }, []);\n    }) */\n  // удаление карточки\n\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id; // console.log('isOwn -> ', isOwn);\n\n    if (isOwn) {\n      api.deleteCard(card._id).then(() => {\n        setCards(state => state.filter(c => c._id !== card._id));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n  /* // запрос к API за данными карточек\n  React.useEffect(() => {\n    api.getCards()\n      .then(res => {\n        // console.log('getCards -> ', res)\n        const cardsData = res.map(item => {\n          return {\n            name: item.name,\n            link: item.link,\n            _id: item._id,\n            likes: item.likes,\n            owner: item.owner\n          }\n        });\n        // Сохраняем карточки в стейт cards\n        setCards(cardsData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  },[]) */\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__data\",\n        children: [currentUser.avatar && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__avatar\",\n          style: {\n            backgroundImage: `url(${currentUser.avatar})`\n          },\n          onClick: onEditAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__edit\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__title\",\n              children: currentUser.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"profile__edit-button\",\n              \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n              onClick: onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__text\",\n            children: currentUser.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile__add-button\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        onCardClick: onCardClick,\n        card: card,\n        name: card.name,\n        likes: card.likes,\n        owner: card.owner,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Main, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/mesto-react/src/components/Main/Main.js"],"names":["React","api","Card","CurrentUserContext","Main","onEditProfile","onAddPlace","onEditAvatar","onCardClick","cards","currentUser","useContext","console","log","handleCardLike","card","isLiked","likes","some","i","_id","handleCardDelete","isOwn","owner","deleteCard","then","setCards","state","filter","c","catch","err","avatar","backgroundImage","name","about","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport api from '../../utils/Api'\nimport Card from '../Card/Card';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\nfunction Main({\n  onEditProfile,\n  onAddPlace,\n  onEditAvatar,\n  onCardClick,\n  cards\n}) {\n  //переменные состояния отвечающие за данные пользователя\n  const currentUser = React.useContext(CurrentUserContext);\n  // const [userName, setUserName] = React.useState(\"Жак-Ив Кусто\");\n  // const [userDescription, setUserDescription] = React.useState(\"Исследователь океана\");\n  // const [userAvatar, setUserAvatar] = React.useState(null);\n  // переменная состояния карточек\n  // const [cards, setCards] = React.useState([]);\n  console.log('cards -> ', cards)\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n/*     console.log(\"handleCardLike isLiked\", isLiked )\n    console.log(\"card ->\", card ) */\n  // Отправляем запрос в API и получаем обновлённые данные карточки\n  /*    */\n\n    /* if (!isLiked){\n      api.addLike(card._id)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c)));\n    }).catch((err) => {\n      console.log(err);\n    });\n    } else {\n      api.deleteLike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) =>( c._id === card._id ? newCard : c)));\n      }).catch((err) => {\n        console.log(err);\n      });\n    } */\n}\n  // запрос в API за пользовательскими данными.\n/*   React.useEffect(() => {\n    api.getProfile()\n      .then(res => {\n        const userData = res;\n        setUserName(userData.name);\n        setUserDescription(userData.about);\n        setUserAvatar(userData.avatar);\n      })\n      .catch((err) => {\n        console.log(err);\n      }, []);\n  }) */\n// удаление карточки\n  function handleCardDelete(card){\n    const isOwn = card.owner._id === currentUser._id;\n    // console.log('isOwn -> ', isOwn);\n    if (isOwn){\n      api.deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    }\n\n  }\n\n  /* // запрос к API за данными карточек\n  React.useEffect(() => {\n    api.getCards()\n      .then(res => {\n        // console.log('getCards -> ', res)\n        const cardsData = res.map(item => {\n          return {\n            name: item.name,\n            link: item.link,\n            _id: item._id,\n            likes: item.likes,\n            owner: item.owner\n          }\n        });\n        // Сохраняем карточки в стейт cards\n        setCards(cardsData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  },[]) */\n\n  return (<main className=\"content\">\n    <section className=\"profile\">\n      <div className=\"profile__data\">\n        {currentUser.avatar && <div className=\"profile__avatar\" style={{ backgroundImage: `url(${currentUser.avatar})` }}  onClick={onEditAvatar}></div>}\n\n        <div className=\"profile__info\">\n          <div className=\"profile__edit\">\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\n            <button type=\"button\" className=\"profile__edit-button\" aria-label=\"Редактировать\" onClick={onEditProfile}></button>\n          </div>\n          <p className=\"profile__text\">{currentUser.about}</p>\n        </div>\n      </div>\n      <button type=\"button\" className=\"profile__add-button\" onClick={onAddPlace}></button>\n    </section>\n\n    <section className=\"elements\">\n      {cards.map(card => (\n\n        <Card\n          key={card._id}\n          onCardClick={onCardClick}\n          card={card}\n          name={card.name}\n          likes={card.likes}\n          owner={card.owner}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete }\n        />\n      ))}\n    </section>\n\n  </main>)\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}