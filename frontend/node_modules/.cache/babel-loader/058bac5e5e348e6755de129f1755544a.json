{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = response => {\n  console.log(\"response ok -> \", response);\n\n  if (response.ok) {\n    return response.json();\n  }\n\n  return response.json().then(res => {\n    throw res.message;\n  });\n};\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      // 'Accept': 'application/json',\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    console.log(\"register response -> \", response);\n    return response.json();\n    /* try {\r\n      if (response.status === 200){\r\n        return response.json();\r\n      }\r\n    }catch(e){\r\n      return (e)\r\n    } */\n  }).then(res => {\n    console.log(res);\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkResponse);\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => res.json());\n};","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/react-mesto-auth/src/mestoAuth.js"],"names":["BASE_URL","checkResponse","response","console","log","ok","json","then","res","message","register","email","password","fetch","method","headers","body","JSON","stringify","catch","err","authorize","getContent","token"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AACP,MAAMC,aAAa,GAAIC,QAAD,IAAc;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAA/B;;AACA,MAAIA,QAAQ,CAACG,EAAb,EAAgB;AACd,WAAOH,QAAQ,CAACI,IAAT,EAAP;AACD;;AAED,SAAOJ,QAAQ,CAACI,IAAT,GAAgBC,IAAhB,CAAsBC,GAAD,IAAS;AACnC,UAAMA,GAAG,CAACC,OAAV;AACD,GAFM,CAAP;AAGD,CATD;;AAWA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEb,QAAS,SAAb,EAAuB;AACjCc,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP;AACA,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,MAAAA,QAAD;AAAWD,MAAAA;AAAX,KAAf;AAN2B,GAAvB,CAAL,CAQNJ,IARM,CAQAL,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,QAArC;AACA,WAAOA,QAAQ,CAACI,IAAT,EAAP;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACG,GAlBM,EAmBNC,IAnBM,CAmBDC,GAAG,IAAI;AACXL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,WAAOA,GAAP;AACD,GAtBM,EAuBNW,KAvBM,CAuBCC,GAAD,IAASjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ,CAvBT,CAAP;AAwBD,CAzBM;AA0BP,OAAO,MAAMC,SAAS,GAAG,CAACV,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEb,QAAS,SAAb,EAAuB;AACjCc,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,MAAAA,QAAD;AAAWD,MAAAA;AAAX,KAAf;AAL2B,GAAvB,CAAL,CAONJ,IAPM,CAODN,aAPC,CAAP;AAQD,CATM;AAWP,OAAO,MAAMqB,UAAU,GAAIC,KAAD,IAAW;AACnC,SAAOV,KAAK,CAAE,GAAEb,QAAS,WAAb,EAAyB;AACnCc,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAmB,UAASQ,KAAM;AAF3B;AAF0B,GAAzB,CAAL,CAONhB,IAPM,CAODC,GAAG,IAAIA,GAAG,CAACF,IAAJ,EAPN,CAAP;AAQD,CATM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\r\nconst checkResponse = (response) => {\r\n  console.log(\"response ok -> \", response);\r\n  if (response.ok){\r\n    return response.json();\r\n  }\r\n\r\n  return response.json().then((res) => {\r\n    throw res.message;\r\n  })\r\n}\r\n\r\nexport const register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      // 'Accept': 'application/json',\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({password, email})\r\n  })\r\n  .then((response) => {\r\n    console.log(\"register response -> \", response)\r\n    return response.json();\r\n    /* try {\r\n      if (response.status === 200){\r\n        return response.json();\r\n      }\r\n    }catch(e){\r\n      return (e)\r\n    } */\r\n  })\r\n  .then(res => {\r\n    console.log(res);\r\n    return res;\r\n  })\r\n  .catch((err) => console.log(err));\r\n};\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({password, email})\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\nexport const getContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\" : `Bearer ${token}`,\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n}\r\n"]},"metadata":{},"sourceType":"module"}