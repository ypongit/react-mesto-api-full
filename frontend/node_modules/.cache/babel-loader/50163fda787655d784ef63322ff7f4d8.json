{"ast":null,"code":"var _jsxFileName = \"E:\\\\OpenServer_5_3_8\\\\domains\\\\yprac.local\\\\react-mesto-auth\\\\src\\\\components\\\\Register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as mestoAuth from '../../mestoAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register(props) {\n  _s();\n\n  const [state, setState] = useState({\n    email: '',\n    password: '',\n    message: ''\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('state!', state); // TODO: добавить логику обработки формы регистрации\n    // if (state.password === state.confirmPassword){}\n    // let {email, password} = state;\n\n    mestoAuth.register(state.email, state.password).then(res => {\n      if (res) {\n        setState({\n          message: ''\n        }, () => {\n          props.history.push('/signin');\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"register__title\",\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"register__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"register__input\",\n        name: \"email\",\n        id: \"email\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"20\",\n        placeholder: \"Email\",\n        value: state.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"register__input\",\n        name: \"password\",\n        id: \"password\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"20\",\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        value: state.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"register__submit\",\n        type: \"submit\",\n        children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"register__link\",\n        to: \"/signin\",\n        children: \"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B? \\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"t+yLiX7OgbrMyI41zsiemhc1aeY=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/react-mesto-auth/src/components/Register/Register.js"],"names":["React","useState","Link","withRouter","mestoAuth","Register","props","state","setState","email","password","message","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","console","log","register","then","res","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AACA,OAAO,KAAKC,SAAZ,MAA2B,iBAA3B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AACjCQ,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,QAAQ,EAAE,EAFuB;AAGjCC,IAAAA,OAAO,EAAE;AAHwB,GAAD,CAAlC;;AAMA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAR,IAAAA,QAAQ,CAAES,IAAD,KAAW,EAClB,GAAGA,IADe;AAElB,OAACH,IAAD,GAAQC;AAFU,KAAX,CAAD,CAAR;AAID,GAND;;AAOA,QAAMG,YAAY,GAAIL,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACM,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBd,KAAtB,EAF0B,CAG1B;AACA;AACE;;AACFH,IAAAA,SAAS,CAACkB,QAAV,CAAmBf,KAAK,CAACE,KAAzB,EAAgCF,KAAK,CAACG,QAAtC,EACCa,IADD,CACOC,GAAD,IAAS;AACb,UAAGA,GAAH,EAAO;AACLhB,QAAAA,QAAQ,CAAC;AACPG,UAAAA,OAAO,EAAE;AADF,SAAD,EAEL,MAAM;AACPL,UAAAA,KAAK,CAACmB,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACD,SAJO,CAAR;AAKD;AACF,KATD;AAWD,GAjBD;;AAmBA,sBACE;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAER,YAAhB;AAA8B,MAAA,SAAS,EAAC,gBAAxC;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,EAAE,EAAC,OAJL;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,SAAS,EAAC,GANZ;AAOE,QAAA,SAAS,EAAC,IAPZ;AAQE,QAAA,WAAW,EAAC,OARd;AASE,QAAA,KAAK,EAAEX,KAAK,CAACE,KATf;AAUE,QAAA,QAAQ,EAAEG;AAVZ;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,EAAE,EAAC,UAJL;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,SAAS,EAAC,GANZ;AAOE,QAAA,SAAS,EAAC,IAPZ;AAQE,QAAA,WAAW,EAAC,sCARd;AASE,QAAA,KAAK,EAAEL,KAAK,CAACG,QATf;AAUE,QAAA,QAAQ,EAAEE;AAVZ;AAAA;AAAA;AAAA;AAAA,cAbF,eA0BE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF,eA8BE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAiC,QAAA,EAAE,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GAxEQP,Q;;KAAAA,Q;AA0ET,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport * as mestoAuth from '../../mestoAuth'\n\nfunction Register(props) {\n  const [state, setState] = useState({\n    email: '',\n    password: '',\n    message: ''\n  })\n\n  const handleChange = (e) => {\n    const {name, value} = e.target;\n    setState((prev) => ({\n      ...prev,\n      [name]: value\n    }));\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('state!', state)\n    // TODO: добавить логику обработки формы регистрации\n    // if (state.password === state.confirmPassword){}\n      // let {email, password} = state;\n    mestoAuth.register(state.email, state.password)\n    .then((res) => {\n      if(res){\n        setState({\n          message: ''\n        }, () => {\n          props.history.push('/signin');\n        })\n      }\n    })\n\n  }\n\n  return (\n    <section className=\"register\">\n      <h2 className=\"register__title\">Регистрация</h2>\n      <form onSubmit={handleSubmit} className=\"register__form\">\n        <input\n          type=\"email\"\n          className=\"register__input\"\n          name=\"email\"\n          id=\"email\"\n          required\n          minLength=\"2\"\n          maxLength=\"20\"\n          placeholder=\"Email\"\n          value={state.email}\n          onChange={handleChange}\n        />\n        <input\n          type=\"password\"\n          className=\"register__input\"\n          name=\"password\"\n          id=\"password\"\n          required\n          minLength=\"2\"\n          maxLength=\"20\"\n          placeholder=\"Пароль\"\n          value={state.password}\n          onChange={handleChange}\n        />\n\n        <button\n          className=\"register__submit\"\n          type='submit'\n        >Зарегистрироваться</button>\n        <Link className=\"register__link\" to=\"/signin\">\n          Уже зарегистрированы? Войти\n        </Link>\n      </form>\n    </section>\n  )\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}