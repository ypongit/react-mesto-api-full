{"ast":null,"code":"var _jsxFileName = \"E:\\\\OpenServer_5_3_8\\\\domains\\\\yprac.local\\\\mesto-react\\\\src\\\\components\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport api from '../../utils/Api';\nimport Card from \"../Card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(_ref) {\n  _s();\n\n  var _this = this;\n\n  let {\n    onEditProfile,\n    onAddPlace,\n    onEditAvatar,\n    onCardClick = {\n      handleCardClick\n    }\n  } = _ref;\n  return function () {\n    //переменные состояния userName, userDescription и userAvatar отвечающие за данные пользователя\n    const [userName, setUserName] = React.useState(\"Жак-Ив Кусто\");\n    const [userDescription, setUserDescription] = React.useState(\"Исследователь океана\");\n    const [userAvatar, setUserAvatar] = React.useState(); // переменная стейта cards с пустым массивом в качестве значения по умолчанию.\n\n    const [cards, setCards] = React.useState([]); // console.log(\"cards ->\", cards);\n    // эффект, вызываемый при монтировании компонента,\n    // который будет совершать запрос в API за пользовательскими данными.\n    // После получения ответа задавайте полученные данные в соответствующие переменные состояния.\n\n    function handleCardClick(card) {\n      setSelectedCard(card);\n    }\n\n    React.useEffect(() => {\n      api.getProfile().then(res => {\n        // console.log(\"Данные пользователя с сервера -> \", res );\n        const userData = res;\n        setUserName(userData.name);\n        setUserDescription(userData.about);\n        setUserAvatar(userData.avatar);\n      }).catch(err => {\n        console.log(err);\n      });\n    }); // запрос к API за данными\n\n    React.useEffect(() => {\n      api.getCards().then(res => {\n        const cardsData = res.map(item => {\n          return {\n            name: item.name,\n            link: item.link,\n            id: item._id,\n            likes: item.likes\n          };\n        }, []); // Сохраняем карточки в стейт cards\n\n        setCards(cardsData); // console.log('resCards -> ', res);\n        // console.log(\"cards ->\", cards);\n      });\n    });\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__avatar\",\n            style: {\n              backgroundImage: `url(${userAvatar})`\n            },\n            onClick: onEditAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile__edit\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"profile__title\",\n                children: userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"profile__edit-button\",\n                \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n                onClick: onEditProfile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 11\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__text\",\n              children: userDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"profile__add-button\",\n          onClick: onAddPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 3\n      }, _this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"elements\",\n        children: cards.map(item => /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            backgroundImage: `url(${item.link})`\n          },\n          name: item.name,\n          likes: item.likes.length,\n          onCardClick: onCardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 4\n        }, _this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, _this);\n  }();\n}\n\n_s(Main, \"mNjAaKxYavJ9s94VYsIQtIM8uUI=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["E:/OpenServer_5_3_8/domains/yprac.local/mesto-react/src/components/Main/Main.js"],"names":["React","api","Card","Main","onEditProfile","onAddPlace","onEditAvatar","onCardClick","handleCardClick","userName","setUserName","useState","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","card","setSelectedCard","useEffect","getProfile","then","res","userData","name","about","avatar","catch","err","console","log","getCards","cardsData","map","item","link","id","_id","likes","backgroundImage","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport api from '../../utils/Api'\nimport Card from \"../Card/Card\";\nfunction Main({\n  onEditProfile,\n  onAddPlace,\n  onEditAvatar,\n  onCardClick={handleCardClick}\n}){\n  //переменные состояния userName, userDescription и userAvatar отвечающие за данные пользователя\n  const [userName, setUserName] = React.useState(\"Жак-Ив Кусто\");\n  const [userDescription, setUserDescription] = React.useState(\"Исследователь океана\");\n  const [userAvatar, setUserAvatar] = React.useState();\n  // переменная стейта cards с пустым массивом в качестве значения по умолчанию.\n  const [cards, setCards] = React.useState([]);\n // console.log(\"cards ->\", cards);\n  // эффект, вызываемый при монтировании компонента,\n  // который будет совершать запрос в API за пользовательскими данными.\n  // После получения ответа задавайте полученные данные в соответствующие переменные состояния.\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  React.useEffect(() => {\n    api.getProfile()\n      .then(res => {\n        // console.log(\"Данные пользователя с сервера -> \", res );\n        const userData = res;\n        setUserName(userData.name);\n        setUserDescription(userData.about);\n        setUserAvatar(userData.avatar);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  })\n  // запрос к API за данными\n  React.useEffect(() => {\n    api.getCards()\n    .then(res => {\n      const cardsData = res.map(item => {\n        return {\n          name: item.name,\n          link: item.link,\n          id: item._id,\n          likes: item.likes\n        }\n      },[]);\n    // Сохраняем карточки в стейт cards\n      setCards(cardsData);\n    // console.log('resCards -> ', res);\n      // console.log(\"cards ->\", cards);\n\n    })\n  })\n\n\n  return (<main className =\"content\">\n  <section className =\"profile\">\n    <div className =\"profile__data\">\n    <div className =\"profile__avatar\" style={{backgroundImage: `url(${userAvatar})`}} onClick={onEditAvatar}></div>\n      <div className =\"profile__info\">\n        <div className =\"profile__edit\">\n          <h1 className =\"profile__title\">{userName}</h1>\n          <button type=\"button\" className =\"profile__edit-button\" aria-label=\"Редактировать\" onClick={onEditProfile}></button>\n        </div>\n        <p className =\"profile__text\">{userDescription}</p>\n      </div>\n    </div>\n    <button type=\"button\" className =\"profile__add-button\" onClick={onAddPlace}></button>\n  </section>\n\n  <section className =\"elements\">\n { cards.map(item => (\n   <Card\n      style={{ backgroundImage: `url(${item.link})` }}\n      name={item.name}\n      likes={item.likes.length}\n      onCardClick={onCardClick}\n    />\n  ))}\n  </section>\n\n</main>)\n}\n\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}